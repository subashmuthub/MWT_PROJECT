services:
  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: labms_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-labms_root_2024}
      MYSQL_DATABASE: ${DB_NAME:-labms_db}
      MYSQL_USER: ${DB_USER:-labms_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-labms_password_2024}
    ports:
      - "3307:3306"  # External port 3307 to avoid conflicts
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - labms_network
    command: --default-authentication-plugin=mysql_native_password

  # Backend Service (Node.js + Express)
  backend:
    build:
      context: ./zbackend
      dockerfile: Dockerfile
    container_name: labms_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-labms_db}
      DB_USER: ${DB_USER:-labms_user}
      DB_PASSWORD: ${DB_PASSWORD:-labms_password_2024}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      GMAIL_USER: ${GMAIL_USER}
      GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - labms_network
    volumes:
      - ./zbackend/uploads:/app/uploads
      - ./zbackend/logs:/app/logs

  # Frontend Service (React + Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: labms_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - labms_network
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

# Docker volumes for persistent data
volumes:
  mysql_data:
    driver: local

# Docker networks
networks:
  labms_network:
    driver: bridge