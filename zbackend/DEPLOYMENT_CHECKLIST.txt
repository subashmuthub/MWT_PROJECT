╔══════════════════════════════════════════════════════════════════════════╗
║                                                                          ║
║              🚀 RAILWAY DEPLOYMENT - QUICK START GUIDE                   ║
║                                                                          ║
╚══════════════════════════════════════════════════════════════════════════╝


✅ PRE-DEPLOYMENT CHECKLIST
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

 [✓] Database connection tested locally
 [✓] All routes working on localhost:5000
 [✓] .env file configured (NOT committed to git)
 [✓] .gitignore includes .env
 [✓] package.json has "start": "node server.js"
 [✓] Code ready to push to GitHub


📋 STEP 1: PREPARE YOUR REPOSITORY
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Run the preparation script:

   cd d:\MWT_PROJECT\zbackend
   .\prepare-deployment.ps1

This will:
   ✓ Create .env.example
   ✓ Check/update .gitignore
   ✓ Verify files are ready

Then commit and push:

   git add .
   git commit -m "✅ Backend ready for Railway deployment"
   git push origin main


🚂 STEP 2: CREATE RAILWAY PROJECT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Go to: https://railway.app/dashboard

2. Click "New Project"

3. Select "Deploy from GitHub repo"

4. Choose: MWT_PROJECT (or your repo name)

5. Railway auto-detects:
   ✓ Node.js project
   ✓ Start command: node server.js
   ✓ Port: 5000


🔐 STEP 3: SET ENVIRONMENT VARIABLES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

In Railway Dashboard:
   → Click your backend service
   → Go to "Variables" tab
   → Click "New Variable"

Add these variables (copy from .env.railway file):

┌─────────────────────────────────────────────────────────────────────────┐
│ Variable Name            │ Value                                        │
├─────────────────────────────────────────────────────────────────────────┤
│ NODE_ENV                 │ production                                   │
│ PORT                     │ 5000                                         │
│ DB_HOST_PROD             │ mysql.railway.internal                       │
│ DB_PORT_PROD             │ 3306                                         │
│ DB_NAME                  │ railway                                      │
│ DB_USER                  │ root                                         │
│ DB_PASSWORD              │ LjcsGFNvzfqyLGDbwCJfVazoOJzQiJsF            │
│ JWT_SECRET               │ [copy from your .env]                        │
│ GMAIL_USER               │ subash1310m@gmail.com                        │
│ GMAIL_APP_PASSWORD       │ [copy from your .env]                        │
│ GOOGLE_CLIENT_ID         │ [copy from your .env]                        │
│ GOOGLE_CLIENT_SECRET     │ [copy from your .env]                        │
│ GITHUB_CLIENT_ID         │ [copy from your .env]                        │
│ GITHUB_CLIENT_SECRET     │ [copy from your .env]                        │
└─────────────────────────────────────────────────────────────────────────┘

⚠️  NOTE: Leave OAuth redirect URIs as localhost for now.
           We'll update them after getting your Railway URL.


🚀 STEP 4: DEPLOY & MONITOR
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Railway will automatically:
   1. Install dependencies (npm install)
   2. Start server (npm start)
   3. Assign a URL

Monitor deployment:
   → Click "Deployments" tab
   → Watch build logs in real-time

Expected output:
   ✓ Installing dependencies...
   ✓ Building application...
   ✓ Starting server...
   ✓ Server is running on port 5000
   ✓ Database connected


🌐 STEP 5: GET YOUR LIVE URL
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

In Railway:
   → Click "Settings" tab
   → Under "Domains" section
   → Click "Generate Domain"

You'll get something like:
   https://your-app-name.up.railway.app

Test it:
   ✓ Root: https://your-app-name.up.railway.app/
   ✓ Health: https://your-app-name.up.railway.app/api/health
   ✓ Test: https://your-app-name.up.railway.app/api/test


🔧 STEP 6: UPDATE OAUTH REDIRECT URIs
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Now that you have your Railway URL, update:

1. In Railway Variables:
   GOOGLE_REDIRECT_URI = https://your-app.up.railway.app/api/auth/oauth/google/callback
   GITHUB_REDIRECT_URI = https://your-app.up.railway.app/api/auth/oauth/github/callback

2. In Google Cloud Console:
   → APIs & Services → Credentials
   → Edit your OAuth 2.0 Client
   → Add authorized redirect URI:
      https://your-app.up.railway.app/api/auth/oauth/google/callback

3. In GitHub Settings:
   → Settings → Developer settings → OAuth Apps
   → Edit your app
   → Update Authorization callback URL:
      https://your-app.up.railway.app/api/auth/oauth/github/callback


🎯 STEP 7: UPDATE FRONTEND
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

In your frontend .env or config:

   VITE_API_URL=https://your-app-name.up.railway.app/api

Then redeploy your frontend (Vercel/Netlify/etc.)


✅ VERIFICATION CHECKLIST
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Test these endpoints:

 [ ] https://your-app.railway.app/ (API documentation)
 [ ] https://your-app.railway.app/api/health (health check)
 [ ] https://your-app.railway.app/api/test (test endpoint)
 [ ] POST https://your-app.railway.app/api/auth/login (auth test)
 [ ] GET https://your-app.railway.app/api/users (protected route)


🎉 SUCCESS INDICATORS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

In Railway logs, you should see:

   ═══════════════════════════════════════════════════════
   🗄️  DATABASE CONNECTION CONFIGURATION
   ═══════════════════════════════════════════════════════
   🌍 Mode: 🚀 PRODUCTION
   📍 Host: mysql.railway.internal
   🔌 Port: 3306
   📦 Database: railway
   👤 User: root
   ═══════════════════════════════════════════════════════
   
   ✅ Database connected
   🚀 Server is running on port 5000
   📚 API Documentation available
   
   📋 Available endpoints:
      🔐 Auth: /api/auth
      👥 Users: /api/users
      🏢 Labs: /api/labs
      🔧 Equipment: /api/equipment
      [... etc ...]


🔄 CONTINUOUS DEPLOYMENT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Every time you push to GitHub:
   1. Railway automatically detects changes
   2. Builds new version
   3. Deploys without downtime
   4. Switches traffic to new version

No manual deployment needed! 🎉


🐛 TROUBLESHOOTING
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Problem: Database connection failed
Fix: Check DB_HOST_PROD = mysql.railway.internal in Railway variables

Problem: Server not starting
Fix: Check logs, verify PORT=5000 is set in Railway

Problem: OAuth not working
Fix: Verify redirect URIs match exactly in Railway + OAuth providers

Problem: Routes returning 404
Fix: Check Railway logs for route loading messages


📚 DETAILED DOCUMENTATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

See: RAILWAY_DEPLOYMENT_GUIDE.md for complete documentation


🆘 NEED HELP?
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Check Railway logs first
2. Verify all environment variables
3. Test database connection in Railway MySQL logs
4. Share error logs for immediate help


╔══════════════════════════════════════════════════════════════════════════╗
║                                                                          ║
║  🚀 Ready to deploy? Run: .\prepare-deployment.ps1                      ║
║                                                                          ║
╚══════════════════════════════════════════════════════════════════════════╝
