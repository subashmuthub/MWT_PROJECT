# .env.example for MWT_PROJECT
# Copy this file to .env and fill in the real values before starting the stack.
# Keep this file out of source control if it contains secrets (use .gitignore).

# General
NODE_ENV=development
PORT=5000

# Database (service name used by docker-compose is usually `mysql`)
# DB_* variables are used by the backend application. The mysql service also accepts
# MYSQL_ environment variables to initialize the database/user on first run.
DB_HOST=mysql
DB_PORT=3306
DB_NAME=labms_db
DB_USER=labms_user
DB_PASSWORD=labms_password

# MySQL container initialization (used by the mysql service)
MYSQL_ROOT_PASSWORD=change_me_root_password
MYSQL_DATABASE=labms_db
MYSQL_USER=labms_user
MYSQL_PASSWORD=labms_password

# App secrets / auth
JWT_SECRET=change_this_jwt_secret
SESSION_SECRET=change_this_session_secret

# OAuth / Social logins (optional)
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Email (optional; used for outgoing mail)
GMAIL_USER=
GMAIL_APP_PASSWORD=

# Frontend/backend base URLs (adjust if using custom ports or a host)
FRONTEND_URL=http://localhost
BACKEND_URL=http://localhost:5000

# Notes:
# - After copying to .env and filling values, restart the compose stack so services
#   pick up the new variables. For example (PowerShell):
#     cd D:\MWT_PROJECT
#     docker-compose -f docker-compose.yml down
#     docker-compose -f docker-compose.yml up -d --build
# - If you only change DB credentials and the DB was already initialized with
#   a different user, either reinitialize the DB (remove volumes) or create the
#   matching user in MySQL so the backend can connect.
# - Do NOT commit your .env with real secrets.
